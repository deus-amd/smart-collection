Ext.data.JsonP.smart_collection({"mixedInto":[],"subclasses":[],"requires":[],"parentMixins":[],"author":[{"tagname":"author","name":"Marcello Gesmundo","email":null}],"autodetected":{},"uses":[],"superclasses":[],"alternateClassNames":[],"mixins":[],"members":[],"tagname":"class","short_doc":"Smart Collection\n\nEasy manipulation of generic collections of objects with events and predefined common useful methods. ...","meta":{},"name":"smart_collection","component":false,"id":"class-smart_collection","html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/index.html#smart_collection' target='_blank'>index.js</a></div></pre><div class='doc-contents'><h1>Smart Collection</h1>\n\n<p>Easy manipulation of generic collections of objects with events and predefined common useful methods.</p>\n\n<h2>Features</h2>\n\n<ul>\n<li>Create a collection identified by a name</li>\n<li>Emit an event on <code>add</code>, <code>remove</code>, <code>empty</code> and <code>flush</code> elements (every event has the <code>sender</code> collection)</li>\n<li>Emit also an event <code>before</code> and <code>after</code> for every addition and deletion</li>\n<li>Create custom views (subsets) of the items</li>\n<li>Add underscore tools functions as features applied to the items</li>\n<li>Protected properties and methods (can't override it for mistake).</li>\n</ul>\n\n\n<h2>Example</h2>\n\n<pre><code> // dependencies\n var Collection = require('smart-collection');\n // create new collection\n var c = new Collection('mycollection');\n // add some handlers\n c.on('add', function add(sender, item) {\n   console.log('&gt;&gt;&gt; add new item from ' + sender.name, item);\n });\n c.on('remove', function remove(sender, item) {\n   console.log('&gt;&gt;&gt; removed item from ' + sender.name, item);\n });\n c.on('empty', function empty(sender) {\n   console.log('&gt;&gt;&gt; there are no more items in ' + sender.name);\n });\n c.on('flush', function flush(sender) {\n   console.log('&gt;&gt;&gt; flushed ' + sender.name);\n });\n // add an item\n c.add({ name: 'John' });\n // add two other items\n c.add([\n   { name: 'Sam' },\n   { name: 'Pat' }\n ]);\n // show all items\n console.log('all', c.all);\n // create a custom view\n c.addView('myView', function (){\n   // the first two items\n   return Array.prototype.slice.call(c.items, 0, 2);\n });\n console.log('myView', c.myView);\n // add a feature\n c.addFeature('filter');\n // use a feature\n console.log('direct', c.filter(function (item) {\n   return item.name.length === 3;\n }));\n // add a view using a feature\n c.addView('myOtherView', function () {\n   return c.filter(function (item) {\n     return item.name.length === 3;\n   });\n });\n console.log('myOtherView', c.myOtherView);\n c.removeAt(1);\n console.log('myOtherView', c.myOtherView);\n // remove an item\n c.remove({ name: 'John' });\n // flush all items\n c.flush();\n // manipulate the item before the add event\n c.on('add-before', function (item) {\n   item.date = new Date();\n });\n c.add({ name: 'John' });\n console.log(c.all);\n</code></pre>\n\n<h1>License</h1>\n\n<p>Copyright (c) 2014 Yoovant by Marcello Gesmundo. All rights reserved.\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:</p>\n\n<ul>\n<li> Redistributions of source code must retain the above copyright\n notice, this list of conditions and the following disclaimer.</li>\n<li> Redistributions in binary form must reproduce the above\n copyright notice, this list of conditions and the following\n disclaimer in the documentation and/or other materials provided\n with the distribution.</li>\n<li> Neither the name of Yoovant nor the names of its\n contributors may be used to endorse or promote products derived\n from this software without specific prior written permission.</li>\n</ul>\n\n\n<p>THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.</p>\n</div><div class='members'></div></div>","aliases":{},"singleton":true,"files":[{"href":"index.html#smart_collection","filename":"index.js"}]});